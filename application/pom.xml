<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>hans-and-peter.game.geography</groupId>
        <artifactId>multimodule</artifactId>
        <version>1.0.0-17</version>
    </parent>

    <artifactId>application</artifactId>
    <!-- <packaging>war</packaging> -->
    <name>Game's Geography Application Glue</name>
    <description>
        Collection of all glue code that configures and binds together the while application.
        Contains the sole dependency to Spring boot. Also contains System tests, which are
        Service tests in this case.
    </description>

    <dependencies>

        <dependency>
            <groupId>hans-and-peter.game.geography</groupId>
            <artifactId>rest</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>hans-and-peter.game.geography</groupId>
            <artifactId>persistence</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
        newest version used for ServiceTest but not compatible with restdocs
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>3.0.1</version>
            <scope>test</scope>
        </dependency>
        but used version is
        -->
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-restassured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.groupId}</finalName>
        <plugins>
            <plugin>
                <!-- see https://github.com/odavid/maven-plugins/tree/master/mixin-maven-plugin -->
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <version>0.1-alpha-39</version>
                <extensions>true</extensions>
                <configuration>
                    <mixins>
                        <mixin>
                            <!-- need to inherit from spring-boot-starter-parent -->
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-starter-parent</artifactId>
                            <version>${spring-boot-starter.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-starter.version}</version>
            </plugin>

            <!--
            copied from spring-restdocs/samples/rest-notes-spring-data-rest/
            see https://github.com/spring-projects/spring-restdocs/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Documentation.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                            <attributes>
                                <snippets>${project.build.directory}/generated-snippets</snippets>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-aws-templates</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <!-- TODO aws: create valid family name "hans-and-peter-game-geography" -->
                        <!-- maybe http://stackoverflow.com/questions/12002033/in-maven-how-can-i-dynamically-build-a-property-value-at-runtime -->
                        <configuration>
                            <delimiters>
                                <delimiter>${*}</delimiter>
                            </delimiters>
                            <outputDirectory>${basedir}/target/aws</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/aws</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-generated-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
                            <!-- TODO package/deployment: copy documentation into public static folder of web application. -->
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-docs</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <!-- see https://github.com/spotify/docker-maven-plugin -->
                <configuration>
                    <!-- TODO docker: Docker image name is duplicated in Maven and stages stage_test script. -->
                    <imageName>${docker.hub.user}/${project.groupId}:${project.version}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <!--
                    fails on Snap-CI. Use command line instead.
                    <imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
