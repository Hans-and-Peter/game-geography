#!/usr/bin/env bash

chmod 755 ./pipeline/*.rb
# TODO snapci: we do not know how to propagate variables
export artefact_version=$(cat artefact_version)

# add AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION as secure environment variables

export instance_id=$( ./pipeline/start_server.rb )
export serviceName=$( ./pipeline/deploy_service.rb $artefact_version )
export public_host=$( ./pipeline/list_endpoint.rb $serviceName )

cd systemtest
mvn clean compile failsafe:integration-test failsafe:verify -Dgame.environment.baseuri=http://$public_host -Dgame.environment.port=8080 -Dgame.serviceVersion=$artefact_version
cd ..

# TODO build: remove service and instance in case of error, too.
./pipeline/undeploy_service.rb $serviceName
./pipeline/stop_server.rb $instance_id

# TODO aws: alternative/production way
# change ELB to the new instance
# wait for old instance to have zero load
# terminate old instance
